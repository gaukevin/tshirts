import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { motion } from "framer-motion";

const MuleSoftMobileSimulator = () => {
  const [inventory, setInventory] = useState([]);
  const [selectedShirt, setSelectedShirt] = useState("");
  const [orderResponse, setOrderResponse] = useState(null);

  const fetchInventory = async () => {
    // Simulating API call to MuleSoft
    const response = await fetch("https://mulesoft-api.example.com/inventory");
    const data = await response.json();
    setInventory(data);
  };

  const requestOrder = async () => {
    if (!selectedShirt) return;
    const response = await fetch("https://mulesoft-api.example.com/order", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ shirt: selectedShirt }),
    });
    const result = await response.json();
    setOrderResponse(result);
  };

  return (
    <div className="p-6 max-w-md mx-auto space-y-4">
      <h1 className="text-xl font-bold">MuleSoft Mobile App Simulator</h1>
      <Button onClick={fetchInventory}>Fetch Inventory</Button>
      <div className="space-y-2">
        {inventory.map((shirt, index) => (
          <Card key={index} onClick={() => setSelectedShirt(shirt.name)}>
            <CardContent className="p-4 cursor-pointer border rounded-lg">
              <motion.div whileHover={{ scale: 1.05 }}>
                <p>{shirt.name}</p>
                <p className="text-sm text-gray-500">Stock: {shirt.stock}</p>
              </motion.div>
            </CardContent>
          </Card>
        ))}
      </div>
      {selectedShirt && (
        <div>
          <p className="mt-4">Selected: {selectedShirt}</p>
          <Button onClick={requestOrder} className="mt-2">Request Order</Button>
        </div>
      )}
      {orderResponse && (
        <div className="mt-4 p-3 border rounded-lg bg-green-100">
          <p>Order Status: {orderResponse.status}</p>
          <p>Message: {orderResponse.message}</p>
        </div>
      )}
    </div>
  );
};

export default MuleSoftMobileSimulator;
